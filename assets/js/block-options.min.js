!function(e,t,o,s){var i=wp.element.createHigherOrderComponent(function(e){return function(t){var s=wp.element.createElement,i=(wp.i18n.__,wp.editor.BlockControls,wp.editor.InspectorControls),n=(wp.components.Button,wp.components.TextControl,wp.components.SelectControl),c=wp.components.CheckboxControl,l=wp.components.TextareaControl,a=(wp.components.PanelRow,wp.components.PanelBody),p=wp.components.Dashicon,b=(wp.components.Popover,Object.assign({},t));b.key="blockOptions";var r=s(e,b),d=(t.isSelected,t.attributes,t.attributes.blockOpts?t.attributes.blockOpts:[]),k=t.attributes.className?t.attributes.className:"",u=!1,g=!1,v="",h="";return UserLoginState="",hr=s("div",{className:"blockopts-separator"},""),-1===k.indexOf(t.id)&&(void 0!==d.id&&d.id!=t.id&&(k=k.replace(" b"+d.id+" ","")),delete d.id,t.setAttributes({className:k+" b"+t.id+" "}),blockOptions=Object.assign({id:t.id},d),t.setAttributes({blockOpts:blockOptions})),void 0!==varblockOpts.settings&&void 0!==varblockOpts.settings.general&&(void 0!==varblockOpts.settings.general.opened&&"1"==varblockOpts.settings.general.opened&&(u=!0),void 0!==varblockOpts.settings.general.hidedesc&&"1"==varblockOpts.settings.general.hidedesc&&(g=!0)),void 0!==varblockOpts.devices&&"activate"==varblockOpts.devices&&(h=[s("h3",{},o.__("Device Visibility"))],g||h.push(s("p",{},o.__("Show or hide specific blocks on your selected devices."))),h.push(s(n,{label:o.__("Show/Hide"),value:void 0!==d.devices&&""!=d.devices?d.devices:"",options:[{label:o.__("Select Visibility Option"),value:"none"},{label:o.__("Hide on Checked Devices"),value:"hide"},{label:o.__("Show on Checked Devices"),value:"show"}],onChange:function(e){delete d.devices,blockOptions=Object.assign({devices:e},d),cname=k.replace(" blockopts-show",""),cname=cname.replace(" blockopts-hide",""),"none"!=e&&(cname=cname+" blockopts-"+e),t.setAttributes({blockOpts:blockOptions}),t.setAttributes({className:cname})}}),s(c,{label:o.__("Desktop"),checked:void 0!==d.desktop&&"on"==d.desktop,onChange:function(e){delete d.desktop,cname=k.replace(" blockopts-desktop",""),event.target.checked?(blockOptions=Object.assign({desktop:"on"},d),cname+=" blockopts-desktop"):blockOptions=d,t.setAttributes({blockOpts:blockOptions}),t.setAttributes({className:cname})}}),s(c,{label:o.__("Tablet"),checked:void 0!==d.tablet&&"on"==d.tablet,onChange:function(e){delete d.tablet,cname=k.replace(" blockopts-tablet",""),event.target.checked?(blockOptions=Object.assign({tablet:"on"},d),cname+=" blockopts-tablet"):blockOptions=d,t.setAttributes({blockOpts:blockOptions}),t.setAttributes({className:cname})}}),s(c,{label:o.__("Mobile"),checked:void 0!==d.mobile&&"on"==d.mobile,onChange:function(e){delete d.mobile,cname=k.replace(" blockopts-mobile",""),event.target.checked?(blockOptions=Object.assign({mobile:"on"},d),cname+=" blockopts-mobile"):blockOptions=d,t.setAttributes({blockOpts:blockOptions}),t.setAttributes({className:cname})}}),hr)),void 0!==varblockOpts.state&&"activate"==varblockOpts.state&&(UserLoginState=[s("h3",{},o.__("User Login State"))],g||UserLoginState.push(s("p",{},o.__("Restrict blocks visibility for logged-in and logged-out users. A simpler solution rather than using Display Logic feature."))),UserLoginState.push(s(n,{label:o.__("Select Login State"),value:void 0!==d.state&&""!=d.state?d.state:"",options:[{label:o.__("Select Visibility Option"),value:"none"},{label:o.__("Show only for Logged-in Users"),value:"in"},{label:o.__("Show only for Logged-out Users"),value:"out"}],onChange:function(e){delete d.state,blockOptions=Object.assign({state:e},d),t.setAttributes({blockOpts:blockOptions})}}),hr)),void 0!==varblockOpts.logic&&"activate"==varblockOpts.logic&&(v=[s("h3",{},o.__("Display Logic"))],g||v.push(s("p",{},o.__("Manage block visibility using valid PHP conditional tags. Please note that the display logic you introduce is EVAL'd directly. There is an optional filter 'block_options_logic_override' which you can use to bypass the EVAL with your own code if needed."))),v.push(s(l,{rows:3,value:d.logic,onChange:function(e){delete d.logic,blockOptions=Object.assign({logic:e},d),t.setAttributes({blockOpts:blockOptions})}}),hr)),r=[r,s(i,{key:"inspector"},s(a,{title:"Block Options",initialOpen:u},s("div",{className:"components-block-description"},s("div",{className:"editor-block-inspector__card-description"},s("span",{className:"widgetopts-dropcap"},s(p,{icon:"editor-bold"})),s("span",{},o.__("Manage your blocks better using available options below. You can restrict visibilities and add custom display logic using WordPress conditional tags.")))),hr,h,UserLoginState,v))]}},"withInspectorControls");wp.hooks.addFilter("blocks.registerBlockType","blockopts-attribute",function(e){return void 0!==e.attributes&&(e.attributes=Object.assign(e.attributes,{blockOpts:{type:"object"}})),e}),wp.hooks.addFilter("editor.BlockEdit","block-options/with-inspector-controls",i)}(window.wp.hooks,window.wp.blocks,window.wp.i18n,window.wp.element);